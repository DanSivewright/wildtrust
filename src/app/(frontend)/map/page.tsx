import configPromise from '@payload-config'
import { getPayload } from 'payload'
import LocationsMap from './components/locations-map'

type Props = {}
const Map: React.FC<Props> = async ({}) => {
  const payload = await getPayload({ config: configPromise })
  const locations = await payload.find({
    collection: 'locations',
  })

  const sourceCoords = [
    [18.49873162446454, -34.35442450989409],
    [18.49328032548152, -34.35048657276423],
    [18.486125493550105, -34.34682975434098],
    [18.480503839889764, -34.34457932526558],
    [18.474882186229394, -34.33993762454862],
    [18.47215653597047, -34.336983681235594],
    [18.470282651417023, -34.33191953637301],
    [18.469430885710693, -34.32727713502014],
    [18.466194176027813, -34.32193102132498],
    [18.463298172627276, -34.318413655522036],
    [18.469430885710693, -34.315599656747175],
    [18.46380923205035, -34.31109706249117],
    [18.477490192401092, -34.27568130222649],
    [18.471358599796872, -34.269041831662015],
    [18.479393100451063, -34.259256393141285],
    [18.481718747733538, -34.238714356719726],
    [18.474952852445682, -34.22175774783014],
    [18.46163249609708, -34.200251159487834],
    [18.439643336410683, -34.18258717478087],
    [18.430974533072828, -34.18363662376726],
    [18.436471822994434, -34.16666893142877],
    [18.443595988060252, -34.14351139218462],
    [18.4385215665952, -34.14001151516004],
    [18.449727580665552, -34.13493643597357],
    [18.456799170380265, -34.130614762629165],
    [18.455319130785767, -34.12536409154267],
    [18.47159956632342, -34.11136070771081],
    [18.543910072215112, -34.09227736568208],
    [18.61304907611401, -34.07756799381981],
    [18.62404365595728, -34.078443622759515],
    [18.6314438539288, -34.07529131621088],
    [18.656815961259724, -34.075116184628925],
    [18.68747392428395, -34.078443622759515],
    [18.69677703030547, -34.07529131621088],
    [18.73667089499679, -34.07706552235195],
    [18.773037582710344, -34.08704721502506],
    [18.799466861205076, -34.09720281712294],
    [18.814624887349765, -34.10641434937486],
    [18.818007835438408, -34.11429199912585],
    [18.821179349495907, -34.11971839809065],
    [18.8270995078729, -34.12409427216258],
    [18.836064093318498, -34.13412258444238],
    [18.844310028927083, -34.144622512471315],
    [18.85405861633393, -34.15403063004039],
    [18.858710169344704, -34.15857968686393],
    [18.833972364697473, -34.17170059307873],
    [18.81177177078277, -34.1842947442646],
    [18.814685296496975, -34.192045464435054],
    [18.821451191784888, -34.20306279198606],
    [18.82631417909468, -34.208658343860705],
    [18.82732263539401, -34.22345286888063],
    [18.833454227998175, -34.22677446853714],
    [18.8482546239413, -34.237612461512114],
    [18.85015753262101, -34.24914814769869],
    [18.849946098392735, -34.26015800881863],
    [18.84423737424396, -34.266448711134],
    [18.824785425290116, -34.27466086434167],
    [18.817917059031203, -34.282426436178085],
    [18.817494190575758, -34.292034496448714],
    [18.806288176505404, -34.29762413506476],
    [18.805231005366295, -34.302514763756456],
    [18.81812849325945, -34.33516987393458],
    [18.821934309359364, -34.33883623178848],
    [18.822568612041977, -34.3423278521733],
    [18.816437019437814, -34.344248181419964],
    [18.80544243959457, -34.348088707981546],
    [18.80649961043565, -34.352452732127524],
    [18.810875775902872, -34.36315870261392],
    [18.814141762021023, -34.3750336901894],
    [18.81837044657638, -34.37590623199411],
    [18.819004749260046, -34.38550359187998],
    [18.500262057267463, -34.38884926227222],
    [18.49873162446454, -34.35442450989409],
  ]
  // async function updateGeometry() {
  //   const locations =
  // }
  // await payload.update({
  //   collection: 'locations',
  //   id: '687643cc399c534583d2716b',
  //   data: {
  //     polygon: sourceCoords.map((coord) => ({
  //       coordinates: [
  //         {
  //           latitude: coord[1], // swap these around
  //           longitude: coord[0],
  //         },
  //       ],
  //     })),
  //   },
  // })

  return (
    <>
      <LocationsMap locations={locations} />
    </>
  )
}
export default Map
